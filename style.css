import React, { useMemo, useState } from "react";
import { motion } from "framer-motion";
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  LineChart,
  Line,
} from "recharts";
import {
  Leaf,
  ShoppingBag,
  Mail,
  Phone,
  MapPin,
  Menu,
  X,
  Search,
  Users,
  Settings,
  Package,
  MessageSquare,
  PieChart,
  TrendingUp,
  Bell,
  Plus,
  Edit,
  Trash2,
  CheckCircle2,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Switch } from "@/components/ui/switch";

// ---------------------------------------------
// GreenAura – Single-file React App
// Elegant, friendly, professional brand site + admin dashboard
// Tailwind + shadcn/ui + Recharts + Framer Motion
// ---------------------------------------------

const navItems = [
  { key: "home", label: "Home" },
  { key: "shop", label: "Shop" },
  { key: "blog", label: "Blog" },
  { key: "dashboard", label: "Dashboard" },
  { key: "contact", label: "Contact" },
];

const productsSeed = [
  { id: "GA-101", name: "Aloe Glow Serum", price: 24.99, stock: 42, tag: "Skincare" },
  { id: "GA-102", name: "Bamboo Detox Soap", price: 9.99, stock: 120, tag: "Body" },
  { id: "GA-103", name: "Citrus Aura Mist", price: 14.5, stock: 63, tag: "Aromatherapy" },
  { id: "GA-104", name: "Eco Cotton Tote", price: 12.0, stock: 80, tag: "Merch" },
  { id: "GA-105", name: "Herbal Scalp Oil", price: 19.99, stock: 34, tag: "Haircare" },
];

const ordersSeed = [
  { id: "ORD-2001", customer: "Adaeze U.", total: 64.97, status: "Processing", items: 3 },
  { id: "ORD-2002", customer: "Chinedu I.", total: 24.99, status: "Shipped", items: 1 },
  { id: "ORD-2003", customer: "Maryam B.", total: 39.48, status: "Delivered", items: 2 },
  { id: "ORD-2004", customer: "Samuel A.", total: 12.0, status: "Cancelled", items: 1 },
];

const customersSeed = [
  { id: "C-01", name: "Adaeze U.", email: "adaeze@example.com", orders: 4, spend: 152.8 },
  { id: "C-02", name: "Chinedu I.", email: "chinedu@example.com", orders: 2, spend: 59.0 },
  { id: "C-03", name: "Maryam B.", email: "maryam@example.com", orders: 5, spend: 180.2 },
];

const messagesSeed = [
  { id: 1, name: "Tolu", email: "tolu@example.com", message: "Do you ship to Abuja?", status: "Open" },
  { id: 2, name: "Kim", email: "kim@example.com", message: "Allergic ingredients list please.", status: "Open" },
  { id: 3, name: "Zara", email: "zara@example.com", message: "Great serum!", status: "Closed" },
];

const salesData = [
  { month: "Jan", sales: 3200 },
  { month: "Feb", sales: 4100 },
  { month: "Mar", sales: 3700 },
  { month: "Apr", sales: 5200 },
  { month: "May", sales: 6100 },
  { month: "Jun", sales: 5800 },
];

function Header({ onToggleMenu, active, setActive }: any) {
  const [open, setOpen] = useState(false);
  return (
    <header className="sticky top-0 z-40 w-full border-b bg-white/80 backdrop-blur supports-[backdrop-filter]:bg-white/60">
      <div className="mx-auto flex max-w-7xl items-center justify-between px-4 py-3">
        <div className="flex items-center gap-2">
          <button className="md:hidden" onClick={() => setOpen(!open)} aria-label="Toggle Menu">
            {open ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
          </button>
          <div className="flex items-center gap-2">
            <div className="grid h-9 w-9 place-items-center rounded-2xl bg-emerald-600 text-white shadow">
              <Leaf className="h-5 w-5" />
            </div>
            <span className="text-xl font-semibold text-emerald-800">GreenAura</span>
          </div>
        </div>
        <nav className="hidden items-center gap-6 md:flex">
          {navItems.map((n) => (
            <button
              key={n.key}
              className={`text-sm font-medium transition hover:text-emerald-700 ${active === n.key ? "text-emerald-700" : "text-slate-600"}`}
              onClick={() => setActive(n.key)}
            >
              {n.label}
            </button>
          ))}
          <Button className="rounded-2xl">Shop Now</Button>
          <button className="relative" aria-label="Notifications">
            <Bell className="h-5 w-5 text-slate-500" />
            <span className="absolute -right-1 -top-1 inline-flex h-4 w-4 items-center justify-center rounded-full bg-emerald-600 text-[10px] text-white">3</span>
          </button>
        </nav>
      </div>
      {open && (
        <div className="border-t bg-white px-4 py-2 md:hidden">
          <div className="flex flex-col gap-2">
            {navItems.map((n) => (
              <button
                key={n.key}
                className={`rounded-xl px-3 py-2 text-left text-sm font-medium transition hover:bg-emerald-50 ${active === n.key ? "text-emerald-700" : "text-slate-700"}`}
                onClick={() => {
                  setActive(n.key);
                  setOpen(false);
                }}
              >
                {n.label}
              </button>
            ))}
          </div>
        </div>
      )}
    </header>
  );
}

function Hero() {
  return (
    <section className="relative isolate overflow-hidden bg-gradient-to-br from-emerald-600 via-emerald-500 to-green-400 py-24 text-white">
      <div className="pointer-events-none absolute inset-0 bg-[url('https://images.unsplash.com/photo-1520962918287-7448c2878f65?q=80&w=2070&auto=format&fit=crop')] opacity-10" />
      <div className="mx-auto grid max-w-7xl grid-cols-1 items-center gap-10 px-6 md:grid-cols-2">
        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }}>
          <h1 className="text-4xl font-extrabold leading-tight md:text-6xl">Eco‑friendly care for a brighter tomorrow</h1>
          <p className="mt-4 text-lg/7 text-emerald-50">
            GreenAura creates gentle, effective products powered by nature. Clean formulas, recyclable packaging, and a brand that smiles back.
          </p>
          <div className="mt-6 flex flex-wrap items-center gap-3">
            <Button className="rounded-2xl bg-white text-emerald-700 hover:bg-emerald-50">Explore Products</Button>
            <Button variant="outline" className="rounded-2xl border-white text-white hover:bg-white/10">Our Story</Button>
          </div>
          <div className="mt-6 flex items-center gap-4 text-emerald-50">
            <div className="flex items-center gap-2"><CheckCircle2 className="h-5 w-5"/> Cruelty‑free</div>
            <div className="flex items-center gap-2"><CheckCircle2 className="h-5 w-5"/> Recyclable</div>
            <div className="flex items-center gap-2"><CheckCircle2 className="h-5 w-5"/> Paraben‑free</div>
          </div>
        </motion.div>
        <motion.div initial={{ opacity: 0, x: 40 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.6 }} className="relative">
          <div className="relative aspect-[4/5] w-full overflow-hidden rounded-3xl shadow-2xl">
            <img
              src="https://images.unsplash.com/photo-1519681393784-d120267933ba?q=80&w=2069&auto=format&fit=crop"
              alt="GreenAura Products"
              className="h-full w-full object-cover"
            />
            <div className="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent" />
          </div>
        </motion.div>
      </div>
    </section>
  );
}

function Features() {
  const features = [
    { icon: <Leaf className="h-6 w-6" />, title: "Natural Ingredients", desc: "Plant-based formulas that are kind to you and the planet." },
    { icon: <TrendingUp className="h-6 w-6" />, title: "Proven Results", desc: "Backed by happy customers and transparent testing." },
    { icon: <Package className="h-6 w-6" />, title: "Sustainable Packaging", desc: "Recyclable, minimal waste, beautifully designed." },
  ];
  return (
    <section className="mx-auto max-w-7xl px-6 py-16">
      <div className="grid gap-6 md:grid-cols-3">
        {features.map((f) => (
          <Card key={f.title} className="rounded-2xl border-emerald-100">
            <CardHeader>
              <div className="flex items-center gap-3 text-emerald-700">
                {f.icon}
                <CardTitle>{f.title}</CardTitle>
              </div>
            </CardHeader>
            <CardContent>
              <p className="text-slate-600">{f.desc}</p>
            </CardContent>
          </Card>
        ))}
      </div>
    </section>
  );
}

function ProductGrid({ items, onEdit, onDelete }: any) {
  const [q, setQ] = useState("");
  const [filter, setFilter] = useState("All");
  const filtered = useMemo(() => {
    return items.filter((p: any) =>
      (filter === "All" || p.tag === filter) &&
      (p.name.toLowerCase().includes(q.toLowerCase()) || p.id.toLowerCase().includes(q.toLowerCase()))
    );
  }, [items, q, filter]);

  const tags = ["All", ...Array.from(new Set(items.map((i: any) => i.tag)))];

  return (
    <section className="mx-auto max-w-7xl px-6 py-12">
      <div className="mb-6 flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between">
        <div className="flex items-center gap-2">
          <div className="relative">
            <Search className="absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-slate-400" />
            <Input className="pl-9" placeholder="Search products..." value={q} onChange={(e) => setQ(e.target.value)} />
          </div>
          <Select value={filter} onValueChange={setFilter}>
            <SelectTrigger className="w-[180px]"><SelectValue /></SelectTrigger>
            <SelectContent>
              {tags.map((t) => (
                <SelectItem key={t} value={t}>{t}</SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>
        <Button className="rounded-2xl"><Plus className="mr-2 h-4 w-4"/>Add Product</Button>
      </div>
      <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
        {filtered.map((p: any) => (
          <Card key={p.id} className="group rounded-2xl border-emerald-100">
            <CardContent className="p-4">
              <div className="aspect-[4/3] w-full overflow-hidden rounded-xl bg-emerald-50">
                <img
                  src={`https://picsum.photos/seed/${encodeURIComponent(p.name)}/640/480`}
                  alt={p.name}
                  className="h-full w-full object-cover transition duration-300 group-hover:scale-105"
                />
              </div>
              <div className="mt-4 flex items-start justify-between">
                <div>
                  <h3 className="text-lg font-semibold text-slate-800">{p.name}</h3>
                  <div className="mt-1 flex items-center gap-2">
                    <Badge variant="secondary" className="rounded-full">{p.tag}</Badge>
                    <span className="text-sm text-slate-500">Stock: {p.stock}</span>
                  </div>
                </div>
                <div className="text-right">
                  <div className="text-xl font-bold text-emerald-700">${p.price.toFixed(2)}</div>
                  <div className="mt-2 flex gap-2">
                    <Button variant="outline" size="icon" className="h-8 w-8" onClick={() => onEdit?.(p)}><Edit className="h-4 w-4"/></Button>
                    <Button variant="destructive" size="icon" className="h-8 w-8" onClick={() => onDelete?.(p)}><Trash2 className="h-4 w-4"/></Button>
                  </div>
                </div>
              </div>
              <Button className="mt-4 w-full rounded-xl" variant="secondary"><ShoppingBag className="mr-2 h-4 w-4"/>Add to Cart</Button>
            </CardContent>
          </Card>
        ))}
      </div>
    </section>
  );
}

function Testimonials() {
  const items = [
    { name: "Maya", text: "My skin LOVES the Aloe Glow! Subtle scent, real results." },
    { name: "Ife", text: "Fast delivery and beautiful packaging. GreenAura feels premium." },
    { name: "Daniel", text: "Finally switched to eco products without losing performance." },
  ];
  return (
    <section className="bg-emerald-50 py-16">
      <div className="mx-auto max-w-7xl px-6">
        <h2 className="mb-6 text-2xl font-semibold text-emerald-900">What customers say</h2>
        <div className="grid gap-6 md:grid-cols-3">
          {items.map((t, i) => (
            <Card key={i} className="rounded-2xl">
              <CardContent className="p-6">
                <p className="text-slate-700">“{t.text}”</p>
                <div className="mt-4 flex items-center gap-3">
                  <Avatar>
                    <AvatarImage src={`https://i.pravatar.cc/100?img=${i + 10}`} />
                    <AvatarFallback>{t.name[0]}</AvatarFallback>
                  </Avatar>
                  <div className="font-medium text-slate-800">{t.name}</div>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
}

function Contact() {
  return (
    <section id="contact" className="mx-auto max-w-7xl px-6 py-16">
      <div className="grid gap-8 md:grid-cols-2">
        <Card className="rounded-2xl">
          <CardHeader>
            <CardTitle>Let’s talk 🌿</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid gap-2">
              <Label>Name</Label>
              <Input placeholder="Your name" />
            </div>
            <div className="grid gap-2">
              <Label>Email</Label>
              <Input type="email" placeholder="you@example.com" />
            </div>
            <div className="grid gap-2">
              <Label>Message</Label>
              <Textarea placeholder="How can we help?" rows={5} />
            </div>
            <Button className="rounded-2xl">Send Message</Button>
          </CardContent>
        </Card>
        <Card className="rounded-2xl">
          <CardHeader>
            <CardTitle>Contact info</CardTitle>
          </CardHeader>
          <CardContent className="space-y-3 text-slate-700">
            <div className="flex items-center gap-3"><Mail className="h-5 w-5 text-emerald-600"/> michellenesfield94@gmail.com</div>
            <div className="flex items-center gap-3"><Phone className="h-5 w-5 text-emerald-600"/> +234 ••• ••• ••••</div>
            <div className="flex items-center gap-3"><MapPin className="h-5 w-5 text-emerald-600"/> Nigeria</div>
            <p className="text-sm">We typically respond within 24–48 hours. For urgent requests, email us directly.</p>
          </CardContent>
        </Card>
      </div>
    </section>
  );
}

function Blog() {
  const posts = [
    { id: 1, title: "5 ways to start an eco‑friendly routine", excerpt: "Small daily changes add up…", date: "Aug 1, 2025" },
    { id: 2, title: "Ingredient spotlight: Aloe Vera", excerpt: "Why aloe soothes and heals", date: "Jul 18, 2025" },
    { id: 3, title: "Recycling 101 at home", excerpt: "Make your bin work smarter", date: "Jun 30, 2025" },
  ];
  return (
    <section className="mx-auto max-w-7xl px-6 py-12">
      <h2 className="mb-6 text-2xl font-semibold text-emerald-900">From the blog</h2>
      <div className="grid gap-6 md:grid-cols-3">
        {posts.map((p) => (
          <Card key={p.id} className="rounded-2xl">
            <CardContent className="p-6">
              <Badge className="mb-3 rounded-full" variant="secondary">{p.date}</Badge>
              <h3 className="text-lg font-semibold text-slate-800">{p.title}</h3>
              <p className="mt-2 text-slate-600">{p.excerpt}</p>
              <Button variant="link" className="mt-2 px-0">Read more →</Button>
            </CardContent>
          </Card>
        ))}
      </div>
    </section>
  );
}

function Footer() {
  return (
    <footer className="border-t bg-white">
      <div className="mx-auto flex max-w-7xl flex-col items-center justify-between gap-4 px-6 py-8 md:flex-row">
        <div className="flex items-center gap-2 text-slate-700">
          <Leaf className="h-5 w-5 text-emerald-600" />
          <span>© {new Date().getFullYear()} GreenAura</span>
        </div>
        <div className="text-slate-600">Contact: <a href="mailto:michellenesfield94@gmail.com" className="font-medium text-emerald-700 hover:underline">michellenesfield94@gmail.com</a></div>
      </div>
    </footer>
  );
}

function Dashboard() {
  const [products, setProducts] = useState(productsSeed);
  const [orders, setOrders] = useState(ordersSeed);
  const [customers, setCustomers] = useState(customersSeed);
  const [messages, setMessages] = useState(messagesSeed);
  const [tab, setTab] = useState("overview");

  const kpis = useMemo(() => (
    [
      { label: "Revenue (30d)", value: "$24,320", icon: <TrendingUp className="h-5 w-5" /> },
      { label: "Orders", value: orders.length, icon: <ShoppingBag className="h-5 w-5" /> },
      { label: "Customers", value: customers.length, icon: <Users className="h-5 w-5" /> },
      { label: "Messages", value: messages.filter(m => m.status === "Open").length, icon: <MessageSquare className="h-5 w-5" /> },
    ]
  ), [orders, customers, messages]);

  const handleDeleteProduct = (p: any) => setProducts((prev: any[]) => prev.filter(x => x.id !== p.id));

  return (
    <section className="bg-emerald-50/50 py-10">
      <div className="mx-auto max-w-7xl px-6">
        <div className="mb-6 flex items-center justify-between">
          <h2 className="text-2xl font-semibold text-emerald-900">Admin Dashboard</h2>
          <div className="flex items-center gap-3">
            <Button variant="outline" className="rounded-2xl"><Settings className="mr-2 h-4 w-4"/>Settings</Button>
          </div>
        </div>

        <div className="grid gap-6 md:grid-cols-4">
          {kpis.map((k) => (
            <Card key={k.label} className="rounded-2xl border-emerald-100">
              <CardHeader className="flex flex-row items-center justify-between">
                <CardTitle className="text-base text-slate-700">{k.label}</CardTitle>
                <div className="text-emerald-700">{k.icon}</div>
              </CardHeader>
              <CardContent>
                <div className="text-2xl font-bold text-emerald-800">{k.value}</div>
              </CardContent>
            </Card>
          ))}
        </div>

        <Tabs value={tab} onValueChange={setTab} className="mt-8">
          <TabsList className="grid w-full grid-cols-6 rounded-2xl bg-emerald-100 p-1 sm:w-auto sm:grid-cols-6">
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="orders">Orders</TabsTrigger>
            <TabsTrigger value="products">Products</TabsTrigger>
            <TabsTrigger value="customers">Customers</TabsTrigger>
            <TabsTrigger value="messages">Messages</TabsTrigger>
            <TabsTrigger value="settings">Settings</TabsTrigger>
          </TabsList>

          <TabsContent value="overview" className="mt-6">
            <div className="grid gap-6 md:grid-cols-2">
              <Card className="rounded-2xl">
                <CardHeader>
                  <CardTitle>Sales (last 6 months)</CardTitle>
                </CardHeader>
                <CardContent className="h-72">
                  <ResponsiveContainer width="100%" height="100%">
                    <BarChart data={salesData}>
                      <CartesianGrid strokeDasharray="3 3" />
                      <XAxis dataKey="month" />
                      <YAxis />
                      <Tooltip />
                      <Bar dataKey="sales" />
                    </BarChart>
                  </ResponsiveContainer>
                </CardContent>
              </Card>
              <Card className="rounded-2xl">
                <CardHeader>
                  <CardTitle>Revenue trend</CardTitle>
                </CardHeader>
                <CardContent className="h-72">
                  <ResponsiveContainer width="100%" height="100%">
                    <LineChart data={salesData}>
                      <CartesianGrid strokeDasharray="3 3" />
                      <XAxis dataKey="month" />
                      <YAxis />
                      <Tooltip />
                      <Line type="monotone" dataKey="sales" />
                    </LineChart>
                  </ResponsiveContainer>
                </CardContent>
              </Card>
            </div>
          </TabsContent>

          <TabsContent value="orders" className="mt-6">
            <Card className="rounded-2xl">
              <CardContent className="p-0">
                <div className="overflow-x-auto">
                  <table className="w-full text-left">
                    <thead className="bg-emerald-100 text-slate-700">
                      <tr>
                        <th className="px-4 py-3">Order ID</th>
                        <th className="px-4 py-3">Customer</th>
                        <th className="px-4 py-3">Items</th>
                        <th className="px-4 py-3">Total</th>
                        <th className="px-4 py-3">Status</th>
                      </tr>
                    </thead>
                    <tbody>
                      {orders.map((o) => (
                        <tr key={o.id} className="border-b">
                          <td className="px-4 py-3 font-medium">{o.id}</td>
                          <td className="px-4 py-3">{o.customer}</td>
                          <td className="px-4 py-3">{o.items}</td>
                          <td className="px-4 py-3">${o.total.toFixed(2)}</td>
                          <td className="px-4 py-3">
                            <Badge className="rounded-full" variant={o.status === "Delivered" ? "default" : o.status === "Cancelled" ? "destructive" : "secondary"}>
                              {o.status}
                            </Badge>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="products" className="mt-6">
            <ProductGrid items={products} onDelete={handleDeleteProduct} />
          </TabsContent>

          <TabsContent value="customers" className="mt-6">
            <Card className="rounded-2xl">
              <CardContent className="p-0">
                <div className="overflow-x-auto">
                  <table className="w-full text-left">
                    <thead className="bg-emerald-100 text-slate-700">
                      <tr>
                        <th className="px-4 py-3">Name</th>
                        <th className="px-4 py-3">Email</th>
                        <th className="px-4 py-3">Orders</th>
                        <th className="px-4 py-3">Total Spend</th>
                      </tr>
                    </thead>
                    <tbody>
                      {customers.map((c) => (
                        <tr key={c.id} className="border-b">
                          <td className="px-4 py-3 font-medium">{c.name}</td>
                          <td className="px-4 py-3">{c.email}</td>
                          <td className="px-4 py-3">{c.orders}</td>
                          <td className="px-4 py-3">${c.spend.toFixed(2)}</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="messages" className="mt-6">
            <Card className="rounded-2xl">
              <CardContent className="divide-y p-0">
                {messages.map((m) => (
                  <div key={m.id} className="flex items-start justify-between gap-4 p-4">
                    <div>
                      <div className="font-medium">{m.name} <span className="ml-2 text-sm text-slate-500">{m.email}</span></div>
                      <div className="text-slate-700">{m.message}</div>
                    </div>
                    <div className="flex items-center gap-2">
                      <Badge className="rounded-full" variant={m.status === "Closed" ? "secondary" : "default"}>{m.status}</Badge>
                      <Button size="sm" variant="outline" onClick={() => setMessages(prev => prev.map(x => x.id === m.id ? { ...x, status: x.status === "Open" ? "Closed" : "Open" } : x))}>
                        Toggle
                      </Button>
                    </div>
                  </div>
                ))}
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="settings" className="mt-6">
            <Card className="rounded-2xl">
              <CardHeader>
                <CardTitle>Store settings</CardTitle>
              </CardHeader>
              <CardContent className="grid gap-6 md:grid-cols-2">
                <div className="grid gap-2">
                  <Label>Store name</Label>
                  <Input defaultValue="GreenAura" />
                </div>
                <div className="grid gap-2">
                  <Label>Support email</Label>
                  <Input defaultValue="michellenesfield94@gmail.com" />
                </div>
                <div className="grid gap-2">
                  <Label>Currency</Label>
                  <Select defaultValue="USD">
                    <SelectTrigger><SelectValue /></SelectTrigger>
                    <SelectContent>
                      <SelectItem value="USD">USD</SelectItem>
                      <SelectItem value="NGN">NGN</SelectItem>
                      <SelectItem value="EUR">EUR</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <div className="flex items-center justify-between rounded-xl border p-4">
                  <div>
                    <div className="font-medium">Maintenance mode</div>
                    <div className="text-sm text-slate-600">Temporarily hide the storefront</div>
                  </div>
                  <Switch />
                </div>
                <div className="md:col-span-2">
                  <Label>About your brand</Label>
                  <Textarea rows={5} placeholder="Tell customers about your mission and values" defaultValue="At GreenAura, we blend science with nature to craft products that are gentle, effective, and planet-friendly." />
                </div>
                <div className="md:col-span-2">
                  <Button className="rounded-2xl">Save Settings</Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </section>
  );
}

function Home() {
  return (
    <>
      <Hero />
      <Features />
      <ProductGrid items={productsSeed} />
      <Testimonials />
    </>
  );
}

function Shop() {
  return (
    <section className="mx-auto max-w-7xl px-6 py-12">
      <div className="mb-6 flex items-center justify-between">
        <h2 className="text-2xl font-semibold text-emerald-900">Shop</h2>
        <div className="flex items-center gap-2">
          <Input placeholder="Search…" />
          <Button className="rounded-2xl">Filter</Button>
        </div>
      </div>
      <ProductGrid items={productsSeed} />
    </section>
  );
}

export default function App() {
  const [active, setActive] = useState("home");
  return (
    <div className="min-h-screen bg-white text-slate-800">
      <Header active={active} setActive={setActive} />

      {active === "home" && <Home />}
      {active === "shop" && <Shop />}
      {active === "blog" && <Blog />}
      {active === "dashboard" && <Dashboard />}
      {active === "contact" && <Contact />}

      <Footer />
    </div>
  );
}
